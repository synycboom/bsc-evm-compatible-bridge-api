// Code generated by go-swagger; DO NOT EDIT.

package erc_721_swaps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/synycboom/bsc-evm-compatible-bridge-api/models"
)

// GetErc721SwapsOKCode is the HTTP code returned for type GetErc721SwapsOK
const GetErc721SwapsOKCode int = 200

/*GetErc721SwapsOK Success

swagger:response getErc721SwapsOK
*/
type GetErc721SwapsOK struct {

	/*
	  In: Body
	*/
	Payload *models.Erc721Swaps `json:"body,omitempty"`
}

// NewGetErc721SwapsOK creates GetErc721SwapsOK with default headers values
func NewGetErc721SwapsOK() *GetErc721SwapsOK {

	return &GetErc721SwapsOK{}
}

// WithPayload adds the payload to the get erc721 swaps o k response
func (o *GetErc721SwapsOK) WithPayload(payload *models.Erc721Swaps) *GetErc721SwapsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get erc721 swaps o k response
func (o *GetErc721SwapsOK) SetPayload(payload *models.Erc721Swaps) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetErc721SwapsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetErc721SwapsBadRequestCode is the HTTP code returned for type GetErc721SwapsBadRequest
const GetErc721SwapsBadRequestCode int = 400

/*GetErc721SwapsBadRequest Bad Request

swagger:response getErc721SwapsBadRequest
*/
type GetErc721SwapsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetErc721SwapsBadRequest creates GetErc721SwapsBadRequest with default headers values
func NewGetErc721SwapsBadRequest() *GetErc721SwapsBadRequest {

	return &GetErc721SwapsBadRequest{}
}

// WithPayload adds the payload to the get erc721 swaps bad request response
func (o *GetErc721SwapsBadRequest) WithPayload(payload *models.Error) *GetErc721SwapsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get erc721 swaps bad request response
func (o *GetErc721SwapsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetErc721SwapsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetErc721SwapsInternalServerErrorCode is the HTTP code returned for type GetErc721SwapsInternalServerError
const GetErc721SwapsInternalServerErrorCode int = 500

/*GetErc721SwapsInternalServerError internal server error

swagger:response getErc721SwapsInternalServerError
*/
type GetErc721SwapsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetErc721SwapsInternalServerError creates GetErc721SwapsInternalServerError with default headers values
func NewGetErc721SwapsInternalServerError() *GetErc721SwapsInternalServerError {

	return &GetErc721SwapsInternalServerError{}
}

// WithPayload adds the payload to the get erc721 swaps internal server error response
func (o *GetErc721SwapsInternalServerError) WithPayload(payload *models.Error) *GetErc721SwapsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get erc721 swaps internal server error response
func (o *GetErc721SwapsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetErc721SwapsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
